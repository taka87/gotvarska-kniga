import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterLink } from '@angular/router';
import { FormsModule } from '@angular/forms';
import { RegisterFormComponentOnlineDB } from '../../register-form-component-online-DB/register-form-component-online-db.component';
import { AuthService } from '../../../mysql-services/auth-service.service';
import { MatSnackBar } from '@angular/material/snack-bar';
import { AdminServiceOnlineDB } from '../../online-DB-services/admin-service-online-db.service';
// import { checkUserRole } from '../../../../../supabase/functions/check-user-role';

@Component({
  selector: 'app-admin-panel-onlinedb',
  templateUrl: './admin-panel-onlinedb.component.html',
  styleUrls: ['./admin-panel-onlinedb.component.css'],
  imports:[CommonModule,RouterLink, FormsModule, RegisterFormComponentOnlineDB]
})
export class AdminPanelOnlineDBComponent implements OnInit {
  title = "–î–æ–±—Ä–µ –¥–æ—à–ª–∏ –≤ –ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª–∞ –Ω–∞ Online DB";
  showAdminForm: boolean = false; // –ü–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ —Ñ–æ—Ä–º–∞—Ç–∞ –µ —Å–∫—Ä–∏—Ç–∞

  users: any[] = [];
  recipes: any[] = [];
  selectedRecipe: any = null;
  userName: string = '';

  //–¥–æ–±–∞–≤–∏ –∞–¥–º–∏–Ω –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏
  isAdmin = false;  
  newAdmin = { username: '', password: '' };
  showAdminRegistrationForm = false;  

  //edit recipe
  showEditForm: boolean = false;
  
  constructor(
    private adminServiceOnlineDB: AdminServiceOnlineDB,
    private authService: AuthService,
    private snackBar:MatSnackBar
  ) {}

  showMessage(message: string) {
    this.snackBar.open(message, '–ó–∞—Ç–≤–æ—Ä–∏', {
      duration: 3000, // 3 —Å–µ–∫—É–Ω–¥–∏
      horizontalPosition: 'center',
      verticalPosition: 'top'
    });
  }



  ngOnInit(): void {
    this.adminServiceOnlineDB.getUsers().subscribe(response => {
      console.log("üìå –ö–∞–∫–≤–æ –≤—Ä—ä—â–∞ Supabase?", response);
    });

    // this.checkAdmin();
    this.loadUsers();
    // this.loadRecipes();

    const user = this.authService.getUserInfo();
    this.userName = user.firstName || '–ì–æ—Å—Ç';
  }

  loadUsers() {
    this.adminServiceOnlineDB.getUsers().subscribe((data) => {
      this.users = Array.isArray(data) ? data : []; // üî• –£–≤–µ—Ä—è–≤–∞–º–µ —Å–µ, —á–µ –µ –º–∞—Å–∏–≤
    });
  }

  // trackByUser(index: number, user: any) {
  //   return user.id; // –ê–∫–æ id –Ω–µ —Å–µ –ø—Ä–æ–º–µ–Ω—è, Angular –Ω—è–º–∞ –¥–∞ –ø—Ä–∞–≤–∏ –∏–∑–ª–∏—à–Ω–∏ —Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏.
  // }

  // trackByRecipe(index: number, recipe: any) {
  //   return recipe.id;
  // }

  // grantAdmin(userId: string) {
  //   this.adminServiceOnlineDB.grantAdminRole(userId).subscribe({
  //     next: () => {
  //       this.showMessage("‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –≤–µ—á–µ –µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!");
  //       this.loadUsers(); // üîÑ –û–±–Ω–æ–≤—è–≤–∞–º–µ —Å–ø–∏—Å—ä–∫–∞
  //     },
  //     error: (error) => this.showMessage("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ä–æ–ª—è: " + error.message),
  //   });
  // }

  // loadRecipes() {
  //   this.adminServiceOnlineDB.getRecipes().subscribe((data) => {
  //     console.log("üçΩÔ∏è –ü–æ–ª—É—á–µ–Ω–∏ —Ä–µ—Ü–µ–ø—Ç–∏:", data);
  //     this.recipes = data;
  //   });
  // }
  // deleteUser(userId: string) {
  //   this.adminServiceOnlineDB.deleteUser(userId).subscribe({
  //     next: (response) => {
  //       this.showMessage("‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –∏–∑—Ç—Ä–∏—Ç —É—Å–ø–µ—à–Ω–æ!");
  //       // console.log("‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –∏–∑—Ç—Ä–∏—Ç —É—Å–ø–µ—à–Ω–æ!", response);
  //       this.loadUsers();
  //     },
  //     error: (error) => {
  //       this.showMessage("‚ö†Ô∏è –ü–æ–ª—É—á–∏—Ö–º–µ –≥—Ä–µ—à–∫–∞, –Ω–æ —â–µ –æ–±–Ω–æ–≤–∏–º —Å–ø–∏—Å—ä–∫–∞");
  //       // console.warn("‚ö†Ô∏è –ü–æ–ª—É—á–∏—Ö–º–µ –≥—Ä–µ—à–∫–∞, –Ω–æ —â–µ –æ–±–Ω–æ–≤–∏–º —Å–ø–∏—Å—ä–∫–∞", error);
  //       if (error.status === 200) {
  //         this.loadUsers(); // –î–æ—Ä–∏ –ø—Ä–∏ "–≥—Ä–µ—à–∫–∞" —Å 200, –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–º–µ —Å–ø–∏—Å—ä–∫–∞
  //       }
  //     }
  //   });
  // }
  
  // deleteRecipe(recipeId: string) {
  //   this.adminServiceOnlineDB.deleteRecipe(recipeId).subscribe(
  //     () => {
  //       this.showMessage("‚úÖ –†–µ—Ü–µ–ø—Ç–∞—Ç–∞ –µ –∏–∑—Ç—Ä–∏—Ç–∞ —É—Å–ø–µ—à–Ω–æ!");
  //       // console.log("‚úÖ –†–µ—Ü–µ–ø—Ç–∞—Ç–∞ –µ –∏–∑—Ç—Ä–∏—Ç–∞ —É—Å–ø–µ—à–Ω–æ!");
  //       this.loadRecipes(); // üîÑ –û–±–Ω–æ–≤—è–≤–∞–º–µ —Å–ø–∏—Å—ä–∫–∞
  //     },
  //     // (error) => console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ:", error)
  //     (error) => this.showMessage("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ:")
  //   );
  // }
  // editRecipe(recipe: any) {
  //   this.selectedRecipe = {id: recipe.id,  ...recipe }; // –ö–æ–ø–∏—Ä–∞–º–µ –æ–±–µ–∫—Ç–∞, –∑–∞ –¥–∞ –Ω–µ –ø–∏–ø–∞–º–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
  //   //console.log("–ò–∑–±—Ä–∞–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ü–∏—è:", this.selectedRecipe);
  //   this.showEditForm = true; // –ü–æ–∫–∞–∑–≤–∞–º–µ —Ñ–æ—Ä–º–∞—Ç–∞
  // }
  
  // updateRecipe() {
  //   if (!this.selectedRecipe || !this.selectedRecipe.id) {
  //     this.showMessage("‚ö†Ô∏è –ù—è–º–∞ –∏–∑–±—Ä–∞–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ü–∏—è!");
  //     return;
  //   }
  //   console.log("‚úÖ –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞:", this.selectedRecipe);
  //   this.adminServiceOnlineDB.updateRecipe(this.selectedRecipe.id, this.selectedRecipe).subscribe({
  //     next: (response) => {
  //       this.showMessage("‚úÖ –†–µ—Ü–µ–ø—Ç–∞—Ç–∞ –µ –æ–±–Ω–æ–≤–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!");
  //       this.showEditForm = false;
  //       this.fetchRecipes();
  //     },
  //     error: (error) => this.showMessage("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞—Ç–∞: " + error.message),
  //   });
  // }

  // fetchRecipes() {
  //   this.adminServiceOnlineDB.getRecipes().subscribe({
  //     next: (recipes) => {
  //       this.recipes = recipes;
  //     },
  //     error: (error) => {
  //       // console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∏—Ç–µ:', error);
  //       this.showMessage('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∏—Ç–µ:');
  //     }
  //   });
  // }

   // async checkAdmin() {
  //   const user = this.authService.getUserInfo();
  //   if (!user) {
  //     console.warn("‚ö†Ô∏è –ù—è–º–∞ –ª–æ–≥–Ω–∞—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª");
  //     return;
  //   }
  
  //   const role = await this.adminServiceOnlineDB.getUserRole(user.id);
  //   console.log("üîπ –†–æ–ª—è –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è:", role);
  //   this.isAdmin = role === "admin";
  // }

  // saveRecipe() {
  //   // console.log(this.selectedRecipe)
  //   this.adminServiceOnlineDB.updateRecipe(this.selectedRecipe.id, this.selectedRecipe).subscribe(
  //     (response) => {
  //       // console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞:", response);
  //       this.showMessage("‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞:");
  //       this.loadRecipes(); // –ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–º–µ —Å–ø–∏—Å—ä–∫–∞
  //       this.selectedRecipe = null; // –°–∫—Ä–∏–≤–∞–º–µ —Ñ–æ—Ä–º–∞—Ç–∞
  //     },
  //     // (error) => console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ:", error)
  //     (error) => this.showMessage("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ:")
  //   );
  // }

  
  cancelEdit() {
    this.showEditForm = false;
    this.selectedRecipe = null;
  }

  toggleAdminForm() {
    //this.showAdminRegistrationForm = !this.showAdminRegistrationForm;
    this.showAdminForm = !this.showAdminForm;
  }

  registerAdmin() {
  }
}