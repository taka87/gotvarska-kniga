import { Component, OnInit } from '@angular/core';
import { AdminService } from '../../../mysql-services/admin-service.service';
import { CommonModule } from '@angular/common';
import { RouterLink } from '@angular/router';
import { FormsModule } from '@angular/forms';
import { RegisterFormComponentOnlineDB } from '../../register-form-component-online-DB/register-form-component-online-db.component';
import { AuthService } from '../../../mysql-services/auth-service.service';
import { MatSnackBar } from '@angular/material/snack-bar';

@Component({
  selector: 'app-admin-panel',
  templateUrl: './admin-panel.component.html',
  styleUrls: ['./admin-panel.component.css'],
  imports:[CommonModule,RouterLink, FormsModule, RegisterFormComponentOnlineDB]
})
export class AdminPanelComponent implements OnInit {
  title = "–î–æ–±—Ä–µ –¥–æ—à–ª–∏ –≤ –ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª–∞ –Ω–∞ MYSQL";
  showAdminForm: boolean = false; // –ü–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ —Ñ–æ—Ä–º–∞—Ç–∞ –µ —Å–∫—Ä–∏—Ç–∞

  users: any[] = [];
  recipes: any[] = [];
  selectedRecipe: any = null;
  userName: string = '';

  //–¥–æ–±–∞–≤–∏ –∞–¥–º–∏–Ω –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏
  isAdmin = false;  
  newAdmin = { username: '', password: '' };
  showAdminRegistrationForm = false;  

  //edit recipe
  showEditForm: boolean = false;

  constructor(
    private adminService: AdminService, 
    private authService: AuthService,
    private snackBar:MatSnackBar
  ) {}

  showMessage(message: string) {
    this.snackBar.open(message, '–ó–∞—Ç–≤–æ—Ä–∏', {
      duration: 3000, // 3 —Å–µ–∫—É–Ω–¥–∏
      horizontalPosition: 'center',
      verticalPosition: 'top'
    });
  }

  ngOnInit(): void {
    this.loadUsers();
    this.loadRecipes();

    const user = this.authService.getUserInfo();
    this.userName = user.firstName || '–ì–æ—Å—Ç';
  }

  loadUsers() {
    this.adminService.getUsers().subscribe((data) => {
      this.users = data;
    });
  }

  loadRecipes() {
    this.adminService.getRecipes().subscribe((data) => {
      //console.log("–†–µ—Ü–µ–ø—Ç–∏ –æ—Ç API –¥–∞–≤–∞:", data); // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞
      this.recipes = data;
    });
  }

  deleteUser(userId: number) {
    this.adminService.deleteUser(userId).subscribe({
      next: (response) => {
        this.showMessage("‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –∏–∑—Ç—Ä–∏—Ç —É—Å–ø–µ—à–Ω–æ!");
        // console.log("‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –∏–∑—Ç—Ä–∏—Ç —É—Å–ø–µ—à–Ω–æ!", response);
        this.loadUsers();
      },
      error: (error) => {
        this.showMessage("‚ö†Ô∏è –ü–æ–ª—É—á–∏—Ö–º–µ –≥—Ä–µ—à–∫–∞, –Ω–æ —â–µ –æ–±–Ω–æ–≤–∏–º —Å–ø–∏—Å—ä–∫–∞");
        // console.warn("‚ö†Ô∏è –ü–æ–ª—É—á–∏—Ö–º–µ –≥—Ä–µ—à–∫–∞, –Ω–æ —â–µ –æ–±–Ω–æ–≤–∏–º —Å–ø–∏—Å—ä–∫–∞", error);
        if (error.status === 200) {
          this.loadUsers(); // –î–æ—Ä–∏ –ø—Ä–∏ "–≥—Ä–µ—à–∫–∞" —Å 200, –ø—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–º–µ —Å–ø–∏—Å—ä–∫–∞
        }
      }
    });
  }
  
  deleteRecipe(recipeId: number) {
    this.adminService.deleteRecipe(recipeId).subscribe(
      () => {
        this.showMessage("‚úÖ –†–µ—Ü–µ–ø—Ç–∞—Ç–∞ –µ –∏–∑—Ç—Ä–∏—Ç–∞ —É—Å–ø–µ—à–Ω–æ!");
        // console.log("‚úÖ –†–µ—Ü–µ–ø—Ç–∞—Ç–∞ –µ –∏–∑—Ç—Ä–∏—Ç–∞ —É—Å–ø–µ—à–Ω–æ!");
        this.loadRecipes(); // üîÑ –û–±–Ω–æ–≤—è–≤–∞–º–µ —Å–ø–∏—Å—ä–∫–∞
      },
      // (error) => console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ:", error)
      (error) => this.showMessage("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ:")
    );
  }

  editRecipe(recipe: any) {
    this.selectedRecipe = {id: recipe.id,  ...recipe }; // –ö–æ–ø–∏—Ä–∞–º–µ –æ–±–µ–∫—Ç–∞, –∑–∞ –¥–∞ –Ω–µ –ø–∏–ø–∞–º–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
    //console.log("–ò–∑–±—Ä–∞–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ü–∏—è:", this.selectedRecipe);
    this.showEditForm = true; // –ü–æ–∫–∞–∑–≤–∞–º–µ —Ñ–æ—Ä–º–∞—Ç–∞
  }
  
  updateRecipe() {
    // console.log(this.selectedRecipe)

    if (!this.selectedRecipe || !this.selectedRecipe.id) {
      // console.error('–ù—è–º–∞ –∏–∑–±—Ä–∞–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ü–∏—è!');
      this.showMessage('–ù—è–º–∞ –∏–∑–±—Ä–∞–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ü–∏—è!');
      return;
    }
  
    console.log(this.selectedRecipe)
    this.adminService.updateRecipe(this.selectedRecipe.id, this.selectedRecipe).subscribe({
      next: (response) => {
        //console.log('–†–µ—Ü–µ–ø—Ç–∞—Ç–∞ –µ –æ–±–Ω–æ–≤–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!', response);
        this.showMessage('–†–µ—Ü–µ–ø—Ç–∞—Ç–∞ –µ –æ–±–Ω–æ–≤–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        this.showEditForm = false; // –°–∫—Ä–∏–≤–∞–º–µ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–ª–µ–¥ —É—Å–ø–µ—à–Ω–∞ —Ä–µ–¥–∞–∫—Ü–∏—è
        this.fetchRecipes(); // –ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–º–µ —Å–ø–∏—Å—ä–∫–∞ —Å —Ä–µ—Ü–µ–ø—Ç–∏
      },
      error: (error) => {
        // console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞—Ç–∞:', error);
        this.showMessage('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞—Ç–∞:');
      }
    });
  }

  fetchRecipes() {
    this.adminService.getRecipes().subscribe({
      next: (recipes) => {
        this.recipes = recipes;
      },
      error: (error) => {
        // console.error('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∏—Ç–µ:', error);
        this.showMessage('–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∏—Ç–µ:');
      }
    });
  }

  saveRecipe() {
    // console.log(this.selectedRecipe)
    this.adminService.updateRecipe(this.selectedRecipe.id, this.selectedRecipe).subscribe(
      (response) => {
        // console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞:", response);
        this.showMessage("‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞:");
        this.loadRecipes(); // –ü—Ä–µ–∑–∞—Ä–µ–∂–¥–∞–º–µ —Å–ø–∏—Å—ä–∫–∞
        this.selectedRecipe = null; // –°–∫—Ä–∏–≤–∞–º–µ —Ñ–æ—Ä–º–∞—Ç–∞
      },
      // (error) => console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ:", error)
      (error) => this.showMessage("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ:")
    );
  }

  cancelEdit() {
    this.showEditForm = false;
    this.selectedRecipe = null;
  }

  toggleAdminForm() {
    //this.showAdminRegistrationForm = !this.showAdminRegistrationForm;
    this.showAdminForm = !this.showAdminForm;
  }

  registerAdmin() {
  }
}