import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject } from 'rxjs';
import { tap } from 'rxjs/operators';

@Injectable({
  providedIn: 'root'
})
export class AuthService {
  private apiUrl = 'http://localhost:5000/api/user';
  private userLoggedIn = new BehaviorSubject<boolean>(false);
  userLoggedIn$ = this.userLoggedIn.asObservable(); 

  constructor(private http: HttpClient) {}

  login(email: string, password: string) {
    return this.http.post<{ token: string; firstName: string; role: string; id: number }>(  // ‚ùóÔ∏è –ü–æ–ø—Ä–∞–≤–µ–Ω —Ç–∏–ø
      `${this.apiUrl}/login`, 
      { email, password }
    ).pipe(
      tap((response) => {
        localStorage.setItem('token', response.token);
        localStorage.setItem('loggedUser', JSON.stringify({
          userId: response.id,  // ‚úÖ response.id –≤–º–µ—Å—Ç–æ response.userId
          firstName: response.firstName,
          role: response.role
        }));
       // console.log("üîπ –ó–∞–ø–∏—Å–∞–Ω –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª:", response);
        this.userLoggedIn.next(true); // üî• –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä–∞–º–µ, —á–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –ª–æ–≥–Ω–∞—Ç
      })
    );
  }

  
  logout() {
    localStorage.removeItem('token');
    localStorage.removeItem('loggedUser');
    this.userLoggedIn.next(false); // üî• –ò–∑–ø—Ä–∞—â–∞–º–µ —Å–∏–≥–Ω–∞–ª, —á–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ –∏–∑–ª—è–∑—ä–ª
  }

  //User info to use outside
  getUserInfo() {
    const userData = localStorage.getItem('loggedUser');
    return userData ? JSON.parse(userData) : null;
  }




  // private apiUrl = 'http://localhost:5000/api/user'; // üìå –°–º–µ–Ω–∏ –Ω–∞ –ø—Ä–∞–≤–∏–ª–Ω–∏—è API –∞–¥—Ä–µ—Å

  // constructor(private http: HttpClient) {} // ‚úÖ –î–æ–±–∞–≤—è–º–µ HttpClient

  // login(email: string, password: string): Observable<any> {
  //   return this.http.post(`${this.apiUrl}/login`, { email, password }).pipe(
  //     catchError(error => {
  //       console.error("–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥:", error);
  //       return throwError(() => new Error(error.error?.message || "–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞"));
  //     })
  //   );
  // }


  // private apiUrl = 'http://localhost:5000/api/auth/login';

  // constructor(private http: HttpClient) {}

  // login(user: { email: string; password: string }) {
  //   return this.http.post<{ token: string }>(this.apiUrl, user).pipe(
  //     tap(response => {
  //       localStorage.setItem('token', response.token); // –ó–∞–ø–∏—Å–≤–∞–º–µ —Ç–æ–∫–µ–Ω–∞ –≤ localStorage
  //     })
  //   );
  // }
}
