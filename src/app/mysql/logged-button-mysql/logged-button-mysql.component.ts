import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { Router } from '@angular/router';
import { RouterModule } from '@angular/router';
import { AuthService } from '../../mysql-services/auth-service.service';
import { UserSessionService } from '../../mysql-services/user-session.service';
import { BehaviorSubject } from 'rxjs';
import { Observable } from 'rxjs';
import { Subscription } from 'rxjs';
import { MatSnackBar } from '@angular/material/snack-bar';


@Component({
  selector: 'app-logged-button-mysql',
  imports: [CommonModule,RouterModule],
  templateUrl: './logged-button-mysql.component.html',
  styleUrl: './logged-button-mysql.component.css'
})
export class LoggedButtonMysqlComponent {
  loggedUser: any;
  private userLoggedIn = new BehaviorSubject<boolean>(false); // –∑–∞ –≤–∑–∏–º–∞–Ω–µ loggedInUser –¥–∞–Ω–Ω–∏—Ç–µ
  
  constructor(
    private router: Router,
    private authService: AuthService, 
    private userSessionService: UserSessionService,
    private snackBar: MatSnackBar
  ) { }

  showMessage(message: string): void {
    this.snackBar.open(message, '–ó–∞—Ç–≤–æ—Ä–∏', {
      duration: 3000, // 3 —Å–µ–∫—É–Ω–¥–∏
      horizontalPosition: 'center',
      verticalPosition: 'top',
      panelClass: ['custom-snackbar']
    });
  }

  get userLoggedIn$(): Observable<boolean> {
    return this.userLoggedIn.asObservable();
  }

  ngOnInit(): void {
    const userData = localStorage.getItem('loggedUser'); //–∫–∞–∑–≤–∞ –≤–∑–µ–º–∏ –¥–∞–Ω–Ω–∏—Ç–µ –æ—Ç –õ–æ–∫–∞–ª –∏ –≥–∏ —Å–ª–æ–∂–∏ –≤ loggedYUSer
    this.loggedUser = userData ? JSON.parse(userData) : null;  // –∫–∞–∑–≤–∞ —Å–ª–æ–∂–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω–∏ –≤ UserData –≥–∏ –∏–∑–ø–æ–ª–∑–≤–∞–π –∑–∞ –Ω–∞—à–∏—Ç–µ –Ω—É–∂–¥–∏ ... 
  }

  // logOut(): void {
  //   localStorage.removeItem('loggedUser');
  //   window.location.reload();
  // }

  addRecipe(): void {
    this.router.navigate(['/user-recipe-mysql']);
  }


  deleteAccount() {
    const confirmation = confirm("–°–∏–≥—É—Ä–µ–Ω –ª–∏ —Å–∏, —á–µ –∏—Å–∫–∞—à –¥–∞ –∏–∑—Ç—Ä–∏–µ—à –∞–∫–∞—É–Ω—Ç–∞ —Å–∏?");
    if (!confirmation) {
      return;
    }

    const userData = localStorage.getItem('loggedUser');
    //console.log("üìå –í–∑–µ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –ø—Ä–µ–¥–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ:", userData);  
  
    if (!userData) {
      this.showMessage('‚ùå –ì—Ä–µ—à–Ω–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ –∏–ª–∏ –ø–∞—Ä–æ–ª–∞!');
      return;
    }
  
    const userId = JSON.parse(userData).userId;
    console.log("üì¢ –û–ø–∏—Ç –∑–∞ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ ID:", userId);
  
    this.userSessionService.deleteOwnAccount(userId).subscribe({
      next: () => {
        //console.log('‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –∏–∑—Ç—Ä–∏—Ç —É—Å–ø–µ—à–Ω–æ!');
  
          //—Ç—É–∫–∞ –∏–∑–æ–±—â–æ –Ω–µ –≤–ª–∏–∑–∞ !!!

        localStorage.removeItem('token');
        localStorage.removeItem('loggedUser');
  
        //console.log("üóëÔ∏è LocalStorage —Å–ª–µ–¥ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ:", localStorage.getItem('token'), localStorage.getItem('loggedUser'));
  
        this.authService.userLoggedIn.next(false);
        this.router.navigate(['/']);
      },
      error: (error) => {
         // —Ç–æ–≤–∞ –≤ –º–æ–º–µ–Ω—Ç–∞ —Ä–∞–±–æ—Ç–∏-> –≤–ª–∏–∑–∞ —Ç—É–∫
        // –∏ —Å–∏ –µ –û–ö –≤–ª–∏–∑–∞ —Ç—É–∫ –∏ —Ç—Ä–∏–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–≤–∞ –∫—ä–º –ø—Ä–∞–≤–∏–ª–Ω–æ—Ç –º—è—Å—Ç–æ –Ω–∞—á–∞–ª–Ω–∏—è –µ–∫—Ä–∞–Ω —Ç—Ä–∏–µ —Ü–µ–ª–∏—è –ª–æ–∫–∞–ª —Å—Ç–æ—Ä–∏–¥–∂ ... 
        console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ:', error);
        //this.logOut(); // –¢–æ–≤–∞ –≤ –º–æ–º–µ–Ω—Ç–∞ —Ä–∞–±–æ—Ç–∏, –Ω–æ –∑–∞—â–æ –µ –≤ error?
      }
    });
  }
  
  // ‚¨áÔ∏è –ù–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ –∏–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ —Å–µ—Å–∏—è—Ç–∞ –∏ –ø—Ä–µ–Ω–∞—Å–æ—á–≤–∞–Ω–µ
  logOut(): void {
    console.log("üî¥ –ò–∑–ø—ä–ª–Ω—è–≤–∞ —Å–µ logout()"); // –î–æ–±–∞–≤—è–º–µ –ª–æ–≥
    localStorage.clear();
    // localStorage.removeItem('token');   //additional
    // localStorage.removeItem('loggedUser');  //additional
    this.userLoggedIn.next(false);

    if (typeof window !== 'undefined') {
      window.location.href = "/";
      console.log(window.location.href);
    }    
  }
}
